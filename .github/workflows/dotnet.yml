# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET package automated build, test and push to Nuget

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Set version
        id: set_version
        run: echo "version=${{ steps.date.outputs.date }}.${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Update version in csproj
        run: |
          sed -i 's|<Version>.*</Version>|<Version>${{ steps.set_version.outputs.version }}</Version>|g' TemperatureConverter/TemperatureConverter.csproj
          sed -i 's|<AssemblyVersion>.*</AssemblyVersion>|<AssemblyVersion>${{ steps.set_version.outputs.version }}</AssemblyVersion>|g' TemperatureConverter/TemperatureConverter.csproj
          sed -i 's|<FileVersion>.*</FileVersion>|<FileVersion>${{ steps.set_version.outputs.version }}</FileVersion>|g' TemperatureConverter/TemperatureConverter.csproj

      - name: Commit updated csproj file
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add TemperatureConverter/TemperatureConverter.csproj
          git commit -m "Update version to ${{ steps.set_version.outputs.version }} [skip ci]"
          git push

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Pack
        run: dotnet pack TemperatureConverter/TemperatureConverter.csproj --output nuget-packages --configuration Release

      - name: Publish
        run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json